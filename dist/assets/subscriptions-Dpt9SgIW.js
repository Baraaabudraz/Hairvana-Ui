import{a as n}from"./index-DHCScZ-8.js";async function i(r={}){try{const t=new URLSearchParams;return r.status&&r.status!=="all"&&t.append("status",r.status),r.salonId&&t.append("salonId",r.salonId),r.ownerId&&t.append("ownerId",r.ownerId),r.search&&t.append("search",r.search),r.includePlans&&t.append("includePlans","true"),await n(`/subscriptions?${t.toString()}`)}catch(t){throw console.error("Error fetching subscriptions:",t),t}}async function c(r){try{return await n(`/subscriptions/${r}`)}catch(t){throw console.error(`Error fetching subscription with ID ${r}:`,t),t}}async function e(r){try{return await n("/subscriptions",{method:"POST",body:JSON.stringify(r)})}catch(t){throw console.error("Error creating subscription:",t),t}}async function a(r,t){try{return await n(`/subscriptions/${r}`,{method:"PUT",body:JSON.stringify(t)})}catch(o){throw console.error(`Error updating subscription with ID ${r}:`,o),o}}async function u(r){try{return await n(`/subscriptions/${r}/cancel`,{method:"PATCH"})}catch(t){throw console.error(`Error cancelling subscription with ID ${r}:`,t),t}}async function h(){try{return await n("/subscriptions/sync",{method:"POST"})}catch(r){throw console.error("Error syncing billing data:",r),r}}async function p(r,t){try{return await n(`/subscriptions/${r}/payment`,{method:"PUT",body:JSON.stringify(t)})}catch(o){throw console.error(`Error updating payment method for subscription with ID ${r}:`,o),o}}async function l(){try{return await n("/subscriptions/plans")}catch(r){throw console.error("Error fetching subscription plans:",r),r}}async function y(r){try{return await n(`/subscriptions/plans/${r}`)}catch(t){throw console.error(`Error fetching subscription plan with ID ${r}:`,t),t}}async function b(r){try{return await n("/subscriptions/plans",{method:"POST",body:JSON.stringify(r)})}catch(t){throw console.error("Error creating subscription plan:",t),t}}async function w(r,t){try{return await n(`/subscriptions/plans/${r}`,{method:"PUT",body:JSON.stringify(t)})}catch(o){throw console.error(`Error updating subscription plan with ID ${r}:`,o),o}}async function d(r){try{return await n(`/subscriptions/plans/${r}`,{method:"DELETE"})}catch(t){throw console.error(`Error deleting subscription plan with ID ${r}:`,t),t}}export{i as a,p as b,u as c,c as d,e,l as f,d as g,y as h,w as i,b as j,h as s,a as u};
