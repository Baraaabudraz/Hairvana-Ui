'use strict';

/** @type {import('sequelize-cli').Migration} */
module.exports = {
  async up(queryInterface, Sequelize) {
    console.log('üîß Applying cPanel-compatible UUID fix...');

    // List of tables that need UUID fixes
    const tablesWithUUID = [
      'users', 'salons', 'subscription_plans', 'subscriptions', 
      'services', 'staff', 'appointments', 'payments', 
      'notification_templates', 'reports', 'hairstyles',
      'billing_histories', 'billing_settings', 'user_settings'
    ];

    for (const table of tablesWithUUID) {
      try {
        // Check if table exists
        const tableExists = await queryInterface.sequelize.query(`
          SELECT EXISTS (
            SELECT FROM information_schema.tables 
            WHERE table_schema = 'public' 
            AND table_name = '${table}'
          );
        `, { type: Sequelize.QueryTypes.SELECT });

        if (tableExists[0].exists) {
          // Remove the default value for id column (let Sequelize handle UUID generation)
          await queryInterface.sequelize.query(`
            ALTER TABLE "${table}" 
            ALTER COLUMN id DROP DEFAULT;
          `);
          console.log(`‚úÖ Removed UUID default from ${table} table`);
        }
      } catch (error) {
        console.log(`‚ö†Ô∏è  Could not update ${table} table:`, error.message);
      }
    }

    console.log('üéâ cPanel UUID fix completed!');
    console.log('üìù Note: UUIDs will now be generated by Sequelize/Node.js instead of the database');
  },

  async down(queryInterface, Sequelize) {
    console.log('üîÑ Reverting cPanel UUID fix...');
    
    // Note: We don't restore the defaults as they were causing issues
    console.log('‚úÖ cPanel UUID fix reverted');
  }
}; 